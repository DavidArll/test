<?php
/**
 * Created by PhpStorm.
 * User: isaias
 * Date: 2/24/14
 * Time: 1:15 PM
 */

class BaseMintTest extends DrupalWebTestCase {

  protected $privileged_user;

  protected function getConfig() {

    module_load_include('module', 'devconnect');
    devconnect_init();

    if (!module_exists('d8cmi')) {
      module_load_include('module', 'd8cmi');
    }
    d8cmi_init();

    // The following line could conceivably throw an Exception
    $config = Drupal::config('devconnect.settings');
    $org = $config->get('org');
    $endpoint = $config->get('endpoint');
    $username = $config->get('user');
    $pass_encrypted = $config->get('pass');

    if ($org == 'fixme' || $org == '') {
      throw new Exception(t('Your Endpoint info has not been set yet.'));
    }

    try {
      $password = Apigee\Util\Crypto::decrypt($pass_encrypted);
    } catch (Exception $e) {
      $password = '';
    }

    $options = array(
      'subscribers' => array(),
      'http_options' => array(
        'connection_timeout' => intval($config->get('connection_timeout')),
        'timeout' => intval($config->get('request_timeout'))
      )
    );
    return new Apigee\Util\OrgConfig($org, $endpoint, $username, $password, $options);
  }

  public function setUp() {

    $key = variable_get('apigee_crypt_key', NULL);

    $this->profile = 'apigee';
    $modules = array(
      'menu',
      'me',
      'taxonomy',
      'devconnect',
      'devconnect_user',
      'devconnect_developer_apps',
      'devconnect_monetization',
      'devconnect_monetization_payment',
      'devconnect_mint_payment',
    );

    $parent_class = new ReflectionClass('DrupalWebTestCase');
    $method = $parent_class->getMethod('setUp');
    $method->setAccessible(TRUE);
    $method->invokeArgs($this, $modules);

    $original_file_config = DRUPAL_ROOT . '/' . $this->originalFileDirectory . '/private/config/active/devconnect.settings.yml';
    $temp_file_config = DRUPAL_ROOT . '/' . $this->private_files_directory . '/config/active/devconnect.settings.yml';
    copy($original_file_config, $temp_file_config);
    $this->refreshVariables();
    variable_set('apigee_crypt_key', $key);

    $perms = func_get_arg(0);
    $this->privileged_user = $this->drupalCreateUser($perms);
    $this->drupalLogin($this->privileged_user);
  }
}