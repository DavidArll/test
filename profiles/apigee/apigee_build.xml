<?xml version="1.0"?>
<project name="apigee-distro-tasks" default="migrate-to-pantheon" description="Apigee Distro Tasks">
  
  <!--  
  
  
  Jenkins jobs for importing site from old apigee hosting to pantheon.
  
  
  INPUTS: 
    $orgname = Apigee orgname
    $environment = Apigee Envrionment
    $pantheon-alias = Already created pantheon instance to which the user below has access
    $pantheon-email/$pantheon-password = Credentials to update pantheon aliases locally
    
    ~/.s3cfg - for access to the buckets
    
  
  -->
  <taskdef name="drush" classname="lib.Phing.tasks.drush.DrushTask"/>  
  <property name="site-archive-store" value="s3://apigee-devconnect/site-archives"/>
  <property prefix="s3cfg" file="${user.home}/.s3cfg"/>
  <taskdef name="printglobals" classname="lib.Phing.tasks.PrintGlobals"/>
  <!-- 
  
  
  -->
  <target name="preflight">
    <fail unless="orgname"           message="You must set the apigee in-house orgname"/>
    <fail unless="environment"       message="You must set the Apigee environment from which to pull an orgname"/>
    <fail unless="pantheon-email"    message="You must enter a valid Pantheon account email address"/>
    <fail unless="pantheon-password" message="You must enter a valid Pantheon account password"/>
  </target>
  <!-- 
  
  
  -->
  <target name="init-reset" depends="preflight">
    <property name="archive-filename" value="${environment}-${orgname}.tgz"/>
    <delete file="/tmp/${archive-filename}" quiet="true" includeemptydirs="true"/>
    <delete dir="${project.basedir}/archive" quiet="true" includeemptydirs="true"/>
    <delete dir="${user.home}/.drush/terminus" quiet="true" includeemptydirs="true"/>
  </target>
  <!-- 
  
  
  -->  
  <target name="drush-pantheon-config" depends="init-reset">
    <exec command="git clone https://github.com/pantheon-systems/terminus.git $HOME/.drush/terminus" logoutput="true"/>
    <drush command="cc" assume="yes">
      <param>drush</param>
    </drush>
    <drush command="pantheon-auth" assume="yes">
      <option name="password">"${pantheon-password}"</option>
      <param>${pantheon-email}</param>
    </drush>
    <drush command="pantheon-aliases" assume="yes" />
    <drush command="dl" assume="yes">
      <param>registry_rebuild</param>
    </drush>
    <drush command="cc" assume="yes">
      <param>drush</param>
    </drush>
  </target>
  <!--
  
  
  
  -->
  <target name="migrate-to-pantheon" depends="drush-pantheon-config">

    <!-- if you don't supply the alias @ORGNAME.dev is assumed -->
    <property name="pantheon-alias" value="@${orgname}.dev" override="false" />
    <property name="site-alias" value="${pantheon-alias}" />
    <property name="old-hosting-sites-folder" value="sites/${environment}-${orgname}" />
    <property name="archive-filename" value="${environment}-${orgname}.tgz"/>
    <php expression="str_replace(array('.dev', '.live', '.test', '@'), '', '${pantheon-alias}');" returnProperty="pantheon-sitename" />
    <drush command="psite-uuid" assume="yes" returnProperty="pantheon-uuid">
      <param>${pantheon-sitename}</param>
    </drush>
    <fail unless="pantheon-uuid" message="Cannot continue without a valid pantheon Site UUID" />
    
    <phingcall target="display-step">
      <param name="message" value="====: BEGINNING MIGRATION OF ${orgname} to ${pantheon-alias} (uuid: ${pantheon-uuid}) :====" />
    </phingcall>
    <drush command="site-alias" assume="yes" returnProperty="remote-host">
      <option name="component">remote-host</option>
      <param>${site-alias}</param>
    </drush>
    <phingcall target="display-step">
      <param name="message" value="Remote host set: ${remote-host}" />
    </phingcall>
    <drush command="site-alias" assume="yes" returnProperty="remote-user">
      <option name="component">remote-user</option>
      <param>${site-alias}</param>
    </drush>
    <phingcall target="display-step">
      <param name="message" value="Remote user set: ${remote-user}" />
    </phingcall>
    <drush alias="${site-alias}" command="sql-connect" assume="yes" returnProperty="mysql-connect" />
    <drush command="psite-cmode" assume="yes">
      <param>"${pantheon-uuid}"</param>
      <param>dev</param>
      <param>SFTP</param>
    </drush>
    <s3get key="${s3cfg.access_key}" secret="${s3cfg.secret_key}" bucket="apigee-devconnect" object="site-archives/${archive-filename}" target="/tmp/${archive-filename}" />
    <untar file="/tmp/${archive-filename}" todir="${project.basedir}/archive"/>
    <property prefix="inifile" file="${project.basedir}/archive/MANIFEST.ini" />
    <php function="str_replace" returnProperty="database-default-file">
      <param value='"' />
      <param value="" />
      <param value="${inifile.database-default-file}" />
    </php>
    <php function="str_replace" returnProperty="files-public">
      <param value='"' />
      <param value="" />
      <param value="${inifile.files-public}" />
    </php>
    <php function="str_replace" returnProperty="archive-sitedir">
      <param value='"' />
      <param value="" />
      <param value="${inifile.sitedir}" />
    </php>
    <trycatch property="foo">
        <try>
          <phingcall target="rsync-command">
            <property name="source" value="${project.basedir}/apigee.drush.inc" />
            <property name="destination" value="${remote-user}@${remote-host}:.drush" />        
          </phingcall>
          <drush alias="${site-alias}" command="cc">
            <param>drush</param>
          </drush>
        </try>

        <catch>
          <phingcall target="display-step">
            <param name="message" value="Failed to update drush command on remote" />
          </phingcall>
        </catch>
    </trycatch>
    <trycatch property="foo">
        <try>
          <phingcall target="display-step">
            <param name="message" value="Dropping current db tables" />
          </phingcall>
          <drush alias="${site-alias}" command="apigee-restore" />
        </try>

        <catch>
            <fail message="Failed to update drush command on remote" />
        </catch>
    </trycatch>
    <trycatch property="foo">
        <try>
          <phingcall target="display-step">
            <param name="message" value="Restoring Database from SQL file: ${mysql-connect} &lt; '${project.basedir}/archive/${database-default-file}' " />
          </phingcall>
          <exec command="${mysql-connect} &lt; '${project.basedir}/archive/${database-default-file}'" logoutput="true" passthru="false" />
        </try>

        <catch>
            <fail message="Database command failed. Database was not restored." />
        </catch>
    </trycatch>
    <phingcall target="database-truncate">
      <property name="tablename" value="cache" />
      <property name="site-alias" value="${site-alias}" />
    </phingcall>
    <phingcall target="database-truncate">
      <property name="tablename" value="facet" />
      <property name="site-alias" value="${site-alias}" />
    </phingcall>
    <phingcall target="drop-tables">
      <property name="tablename" value="apachesolr" />
    </phingcall>
    <phingcall target="drop-tables">
      <property name="tablename" value="rules" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update system set filename=REPLACE(filename, 'sites/all/modules', 'profiles/apigee/modules') where filename like 'sites/all/modules%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update system set filename=REPLACE(filename, 'sites/all/themes', 'profiles/apigee/themes') where filename like 'sites/all/themes%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update system set filename=REPLACE(filename, 'sites/all/themes', 'profiles/apigee/themes') where filename like 'sites/all/themes%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update registry set filename=REPLACE(filename, 'sites/all/modules', 'profiles/apigee/modules') where filename like 'sites/all/modules%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update registry set filename=REPLACE(filename, 'sites/all/themes', 'profiles/apigee/themes') where filename like 'sites/all/themes%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update registry set filename=REPLACE(filename, '${old-hosting-sites-folder}/themes', 'sites/all/themes') where filename like 'sites/${old-hosting-sites-folder}/themes%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    
    <phingcall target="mysql-query-string">
      <property name="query" value="delete from system where name like '%Rules%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="delete from registry where name like '%Rules%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    
    <phingcall target="mysql-query-string">
      <property name="query" value="update registry set filename=REPLACE(filename, '${old-hosting-sites-folder}/modules', 'sites/all/modules') where filename like 'sites/${old-hosting-sites-folder}/modules%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update block_custom set body=replace(body, '/sites/all/themes/apigee_base', '/profiles/apigee/themes/apigee_base')" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update block_custom set body=replace(body, '/sites/all/themes/apigee_devconnect', '/profiles/apigee/themes/apigee_devconnect');" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update menu_router set include_file=replace(include_file, 'sites/all/modules/contrib', 'profiles/apigee/modules/contrib');" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update menu_router set include_file=replace(include_file, 'sites/all/modules/custom', 'profiles/apigee/modules/custom');" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update system set weight=-10 where filename like '%view%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update system set status=0 where name like '%apachesolr%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update system set status=0 where name like '%rules%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update system set status=0 where name like '%facet%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update system set schema_version=-1 where name like '%apachesolr%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="update system set schema_version=-1 where name like '%rules%';" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="delete from variable where name like 'apachesolr%'" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <phingcall target="mysql-query-string">
      <property name="query" value="drop table if exists temp_og_users_roles;" />
      <property name="mysql-connect" value="${mysql-connect}" />
    </phingcall>
    <drush alias="${site-alias}" command="vset">
      <param>install_profile</param>
      <param>apigee</param>
    </drush>
    <drush alias="${site-alias}" command="rr" />
    <drush alias="${site-alias}" command="apigee-environment" returnProperty="file_public_path">
      <param>file_public_path</param>
    </drush>
    <drush alias="${site-alias}" command="vset" assume="yes" >
      <param>file_public_path</param>
      <param>"${file_public_path}"</param>
    </drush>
    <drush alias="${site-alias}" command="apigee-environment" returnProperty="file_private_path" >
      <param>file_private_path</param>
    </drush>
    <drush alias="${site-alias}" command="vset" assume="yes" >
      <param>file_private_path</param>
      <param>"${file_private_path}"</param>
    </drush>
    <drush alias="${site-alias}" command="apigee-environment" returnProperty="file_temporary_path">
      <param>file_temporary_path</param>
    </drush>
    <drush alias="${site-alias}" command="vset" assume="yes" >
      <param>file_temporary_path</param>
      <param>"${file_temporary_path}"</param>
    </drush> 
    <!-- get any files not managed by drupal. Check both clusters and fail silently if nonexistant -->
    <exec command="s3cmd sync --recursive s3://apigee-devconnect/rea1dc001/${environment}-${orgname}/files ." dir="${project.basedir}/archive/devconnect-111.8/${archive-sitedir}" passthru="true" logoutput="true" checkreturn="false" />
    <exec command="s3cmd sync --recursive s3://apigee-devconnect/rea1dc002/${environment}-${orgname}/files ." dir="${project.basedir}/archive/devconnect-111.8/${archive-sitedir}" passthru="true" logoutput="true" checkreturn="false" />
    <!-- Delete CSS/JS Aggregation -->
    <delete quiet="true">
      <fileset dir="${project.basedir}/archive/devconnect-111.8/${files-public}">
          <include name="js/**" />
          <include name="css/**" />
          <include name="cdn/**" />
          <include name="ctools/**" />
        </fileset>
    </delete>
    <drush alias="${site-alias}" command="rr" />
    <drush alias="${site-alias}" command="cc">
      <param>registry</param>
    </drush>
    <phingcall target="rsync-command">
      <property name="source" value="${project.basedir}/archive/devconnect-111.8/${files-public}" />
      <property name="destination" value="${remote-user}@${remote-host}:~/." />
    </phingcall>
    
    <phingcall target="rsync-command">
      <property name="source" value="${project.basedir}/archive/devconnect-111.8/${archive-sitedir}/modules" />
      <property name="destination" value="${remote-user}@${remote-host}:code/sites/all" />
    </phingcall>
    
    <phingcall target="rsync-command">
      <property name="source" value="${project.basedir}/archive/devconnect-111.8/${archive-sitedir}/libraries" />
      <property name="destination" value="${remote-user}@${remote-host}:code/sites/all" />
    </phingcall>
    <phingcall target="rsync-command">
      <property name="source" value="${project.basedir}/archive/devconnect-111.8/${archive-sitedir}/themes" />
      <property name="destination" value="${remote-user}@${remote-host}:code/sites/all" />
    </phingcall>
    <phingcall target="views-template">
      <property name="site-alias"  value="${site-alias}" />
      <property name="remote-host" value="${remote-host}" />
      <property name="remote-user" value="${remote-user}" />
      <property name="archive-sitedir"  value="${archive-sitedir}" />
    </phingcall>
    <trycatch property="foo">
      <try>
        <drush alias="${site-alias}" command="rr" />
        <drush alias="${site-alias}" command="updatedb" assume="yes" />
      </try> 
      <catch>
        <drush alias="${site-alias}" command="updatedb" assume="yes" />
      </catch>
    </trycatch>
    <drush alias="${site-alias}" command="dl" assume="yes">
      <param>jira_issue_collector</param>
    </drush>
    <drush alias="${site-alias}" command="pm-enable" assume="yes" >
      <param>apachesolr</param>
      <param>apachesolr_search</param>
      <param>pantheon_api</param>
      <param>pantheon_apachesolr</param>
      <param>apigee_account</param>
      <param>jira_issue_collector</param>
    </drush>
    <drush alias="${site-alias}" command="pm-disable" assume="yes">
      <param>smtp</param>
      <param>cdn</param>
    </drush>
    <drush alias="${site-alias}" command="vset" assume="yes">
      <param>jira_issue_collector_code</param>
      <param><![CDATA['<script type="text/javascript" src="https://apigeesc.atlassian.net/s/d41d8cd98f00b204e9800998ecf8427e/en_US-nfwzef-1988229788/6144/98/1.4.0-m6/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?collectorId=140f6a91"></script>']]></param>
    </drush>
    <drush alias="${site-alias}" command="vset" assume="yes">
      <param>jira_issue_collector_url</param>
      <param>"https://apigeesc.atlassian.net/s/d41d8cd98f00b204e9800998ecf8427e/en_US-nfwzef-1988229788/6144/98/1.4.0-m6/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?collectorId=140f6a91"</param>
    </drush>
    <php expression="json_encode(array( 1 => 1, 2 => 2, 5 => 5, 3 => 3));" returnProperty="json-array" />
    <drush alias="${site-alias}" command="vset" assume="yes">
      <param>jira_issue_collector_roles</param>
      <param>'${json-array}'</param>
      <option name="format">json</option>
    </drush>
    <drush alias="${site-alias}" command="vset" assume="yes">
      <param>preprocess_js</param>
      <param>"0"</param>
    </drush>
    <drush alias="${site-alias}" command="vset" assume="yes">
      <param>preprocess_css</param>
      <param>"0"</param>
    </drush>
    <drush alias="${site-alias}" command="cc" assume="yes">
      <param>all</param>
    </drush>
  </target>
  <!-- 
  
  
  -->
  <target name="drop-tables">
    <property name="tablename" value="apachesolr" override="false" />
    <property name="site-alias" value="@${orgname}.dev" override="false" />
    
    <drush alias="${site-alias}" command="sql-query" returnProperty="database-table-list">
      <param>"show tables like '%${tablename}%'"</param>
    </drush>
    <php expression="implode(',', array_splice(explode(PHP_EOL, '${database-table-list}'), 1))" returnProperty="database-tables" />
    <foreach list="${database-tables}" param="drop-table" target="mysql-query-string" />
  </target>
  <!-- 
  
  
  -->
  <target name="database-truncate">
    <property name="tablename" value="cache" override="false" />
    <property name="site-alias" value="@${orgname}.dev" override="false" />
    
    <drush alias="${site-alias}" command="sql-query" returnProperty="database-table-list">
      <param>"show tables like '%${tablename}%'"</param>
    </drush>
    <php expression="implode(',', array_splice(explode(PHP_EOL, '${database-table-list}'), 1))" returnProperty="database-tables" />
    <foreach list="${database-tables}" param="truncate-table" target="mysql-query-string" />
  </target>
  <!-- 
  
  
  -->
  <target name="mysql-query-string">
    <property name="site-alias" value="@${orgname}.dev" override="false" />
    <drush alias="${site-alias}" command="sql-connect" assume="yes" returnProperty="mysql-connect" />
    <if>
      <isset property="drop-table" />
      <then>
        <property name="query" value="drop table ${drop-table}"/>
      </then>
    </if>
    <if>
      <isset property="truncate-table" />
      <then>
        <property name="query" value="truncate ${truncate-table}"/>
      </then>
    </if>
    <phingcall target="display-step">
      <param name="message" value="${query}" />
    </phingcall>
    <exec command='${mysql-connect} -e "${query}"' logoutput="true" />
  </target>
  
  <!-- 
  
  
  -->
  <target name="rsync-command">
    <phingcall target="display-step">
      <param name="message" value="Syncing: ${source} => ${destination}" />
    </phingcall>
    <exec command="rsync -rlvz --size-only --exclude='.*' --ipv4 --progress -e 'ssh -p 2222 -oStrictHostKeyChecking=no' '${source}' '${destination}'" logoutput="true" />
  </target>
  <!-- 
  
  
  -->
  <target name="views-template">
    <drush alias="${site-alias}" command="vget" returnProperty="theme-default">
      <param>theme_default</param>
      <option name="format">json</option>
    </drush>
    <php function="str_replace" returnProperty="theme-default">
      <param value='"' />
      <param value="" />
      <param value="${theme-default}" />
    </php>
    <drush alias="${site-alias}" command="dd" assume="yes" returnProperty="theme-path">
      <param>"${theme-default}"</param>
    </drush>
    <if>
      <not>
        <contains string="${theme-path}" substring="profiles" />
      </not>
      <then>
        <property name="path" value="${project.basedir}/archive/devconnect-111.8/${archive-sitedir}/themes/${theme-default}/templates" />
        <mkdir dir="${path}" />
        <echo file="${path}/views-view-unformatted.tpl.php" append="false" level="verbose"><![CDATA[<?php

/**
 * @file
 * Default simple view template to display a list of rows.
 *
 * @ingroup views_templates
 */
?>
<?php if (!empty($title)): ?>
<h3><?php print $title; ?></h3>
<?php endif; ?>
<?php foreach ($rows as $id => $row): ?>
<div<?php if ($classes_array[$id]) { print ' class="' . $classes_array[$id] .'"';  } ?>>
  <?php print $row; ?>
</div>
<?php endforeach; ?>

    ]]></echo>
      <phingcall target="rsync-command">
        <property name="source" value="${project.basedir}/archive/devconnect-111.8/${archive-sitedir}/themes/${theme-default}/templates/views-view-unformatted.tpl.php" />
        <property name="destination" value="${remote-user}@${remote-host}:code/sites/all/themes" />        
      </phingcall>
      </then>
    </if>
  </target>
  <!-- 
  
  
  -->
  <target name="display-step">
    <echo>

            -------------------------------------------------</echo>
    <echo>=&gt; ${message}</echo>
    <echo>-------------------------------------------------
    
    </echo>
  </target>
  
</project>
