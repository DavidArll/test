<?xml version="1.0"?>
<project name="apigee-drupal-project" default="build-distro" description="Apigee Drupal Build">
<!--
  Two types of builds: internal and external build. Internal builds are those
  who have access to the apigee/drupal-settings repo. External builds are those
  who do not. Default is an external build. Internal builds will have
  ${build.type} = internal in their Jenkins default properties.

  ============== To Install Phing  ======================
  to install phing: sudo sh ./pear-installs.sh

  ============== FOR LOCAL DEVELOPMENT  ======================
  From the command line: phing apigee-drupal -Dbuild.type=local
-->
  <php expression="14.07" returnProperty="YYDD"/>
  <property name="VERSION" value="pantheon-${YYDD}.${env.BUILD_NUMBER}"/>
  <property name="branchname" value="master" override="false"/>
  <property name="create-new-branch-for-build" value="no"/>
  <!-- Drush Task: -->
  <taskdef name="drush" classname="tasks.drush.DrushTask"/>
  <target name="preflight">
    <fail unless="repo-uri" message="You must supply a repo-uri into which this build will be checked. Optionally you may include repo-branch."/>
    <delete dir="${project.basedir}/webapp" quiet="true"/>
    <delete dir="${user.home}/.drush/cache" quiet="true"/>
    <delete dir="${user.home}/.drush/terminus" quiet="true"/>
    <exec command="sudo composer self-update" logoutput="true"/>
    <exec command="git clone git@github.com:pantheon-systems/terminus" dir="${user.home}/.drush" logoutput="true"/>
    <exec command="composer update" dir="${user.home}/.drush/terminus" logoutput="true"/>
    <if>
      <contains string="${repo-uri}" substring="drush.in:2222"/>
      <then>
        <fail unless="pantheon-email" message="If you are using a pantheon github repo, you must authenticate using your pantheon username/password."/>
        <fail unless="pantheon-password" message="If you are using a pantheon github repo, you must authenticate using your pantheon username/password."/>
        <drush command="pantheon-auth" assume="yes">
          <option name="password">"${pantheon-password}"</option>
          <param>${pantheon-email}</param>
        </drush>
        <!-- drush command="pantheon-aliases" assume="yes"/ -->
        <php expression="str_replace('@codeserver', '', array_pop(array_splice(explode('.', '${repo-uri}'), 2,1)))" returnProperty="pantheon-uuid"/>
        <drush command="psite-cmode" assume="yes">
          <param>"${pantheon-uuid}"</param>
          <param>dev</param>
          <param>GIT</param>
        </drush>
      </then>
    </if>
  </target>

  <target name="init" depends="preflight">
    <drush command="cc">
      <param>drush</param>
    </drush>
    <exec command="which git" outputProperty="git-binary"/>
  </target>

  <target name="build-distro" depends="init">
    <gitclone repository="${repo-uri}" targetPath="${project.basedir}/webapp"/>
    <if>
      <not>
        <equals arg1="${repo-branch}" arg2="master"/>
      </not>
      <then>
        <gitcheckout repository="${project.basedir}/webapp" branchname="${repo-branch}"/>
      </then>
    </if>
    <phingcall target="display-step">
      <property name="message" value="Starting point: ${repo-uri} =&gt; ${repo-branch}"/>
    </phingcall>
    <if>
      <equals arg1="${create-new-branch-for-build}" arg2="yes"/>
      <then>
        <gitbranch repository="${project.basedir}/webapp" branchname="${VERSION}"/>
        <gitcheckout repository="${project.basedir}/webapp" branchname="${VERSION}"/>
        <property name="push-branch" value="${VERSION}"/>
      </then>
      <else>
        <property name="push-branch" value="${repo-branch}"/>
      </else>
    </if>
    <phingcall target="display-step">
      <property name="message" value="Checking results of build into ${repo-uri} =&gt; ${push-branch}"/>
    </phingcall>
    <gitpull repository="${project.basedir}/webapp" source="git://github.com/pantheon-systems/drops-7.git" refspec="+refs/heads/master:+refs/remotes/origin/master" quiet="false" strategyOption="theirs"/>
    <delete dir="${project.basedir}/webapp/profiles/apigee" quiet="true"/>
    <gitclone repository="git@github.com:apigee/apigee-drupal-profile" targetPath="${project.basedir}/webapp/profiles/apigee"/>
    <gitcheckout repository="${project.basedir}/webapp/profiles/apigee" branchname="development"/>
    <delete dir="${project.basedir}/webapp/profiles/apigee/.git" quiet="true"/>
    <exec command="drush make --no-core --no-gitinfofile --contrib-destination=. --yes --nocolor apigee.make" dir="${project.basedir}/webapp/profiles/apigee" logoutput="true" passthru="true"/>
    <if>
      <not>
        <or>
          <available file="${project.basedir}/webapp/profiles/apigee/modules" type="dir"/>
          <available file="${project.basedir}/webapp/profiles/apigee/themes" type="dir"/>
          <available file="${project.basedir}/webapp/profiles/apigee/libraries" type="dir"/>
        </or>
      </not>
      <then>
        <phingcall target="display-step">
          <property name="message" value="Drush make command failed. Check to make sure ~/.drush/cache is getting deleted before every build and that there's enough space on the drive"/>
        </phingcall>
        <fail/>
      </then>
    </if>

    <!-- Navbar makes sites/all/libraries/modernizr directory for some reason, delete it so it'll revert to profiles/apigee/libraries -->
    <exec command="rm -rf '${project.basedir}/webapp/sites/all/libraries/modernizr'" logoutput="true" passthru="true"/>
    <!-- make the modernizr directory in the profile -->
    <mkdir dir="${project.basedir}/webapp/profiles/apigee/libraries/modernizr" />

    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/libraries'" logoutput="true" passthru="true"/>
    <!-- remove duplicate file_entity module which media bundles for some reason. -->
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/media/file_entity'" logoutput="true" passthru="true"/>
    <exec command="cd &quot;${project.basedir}/webapp/profiles/apigee/libraries/mgmt-api-php-sdk&quot; &amp;&amp; rm .gitignore &amp;&amp; composer install --verbose --no-dev --no-progress" logoutput="true" />
    <!-- get http://modernizr.com/downloads/modernizr-2.7.1.js and download it to the modernizr library -->
    <exec command="cd &quot;${project.basedir}/webapp/profiles/apigee/libraries/modernizr&quot; &amp;&amp; wget -O modernizr.js http://modernizr.com/downloads/modernizr-2.7.1.js" logoutput="true"/>

    <!-- begin removal of extraneous library content -->
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/awssdk/_compatibility_test'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/awssdk/_docs'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/awssdk/_samples'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/backbone/docs'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/backbone/examples'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/backbone/test'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/ckeditor/samples'" logoutput="true" passthru="true"/>
    <exec command="rm -f '${project.basedir}/webapp/profiles/apigee/libraries/colorpicker/index.html'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/google-api-php-client/examples'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/google-api-php-client/test'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/highcharts/examples'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/highcharts/exporting-server'" logoutput="true" passthru="true"/>
    <exec command="rm -f '${project.basedir}/webapp/profiles/apigee/libraries/highcharts/index.htm'" logoutput="true" passthru="true"/>
    <exec command="rm -f '${project.basedir}/webapp/profiles/apigee/libraries/jquery.cycle/example.html'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/mediaelement/demo'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/mediaelement/test'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/mgmt-api-php-sdk/vendor/guzzle/docs'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/mgmt-api-php-sdk/vendor/guzzle/phing'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/plupload/examples'" logoutput="true" passthru="true"/>
    <exec command="rm -f '${project.basedir}/webapp/profiles/apigee/libraries/respondjs/cross-domain/*.html'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/respondjs/test'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/SolrPhpClient/phpdocs'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/SolrPhpClient/tests'" logoutput="true" passthru="true"/>
    <exec command="rm -f '${project.basedir}/webapp/profiles/apigee/libraries/syntaxhighlighter/index.html'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/libraries/syntaxhighlighter/tests'" logoutput="true" passthru="true"/>
    <!-- finished removal of extraneous library content -->

    <!-- begin removal of extraneous module content -->
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/cdn/help'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/ckeditor/includes/uicolor/samples'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/commerce_worldpay_business_gateway/worldpay page example'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/ctools/ctools_plugin_example'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/ctools/help'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/ctools/page_manager/help'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/devel/krumo/docs'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/import_html/extras/features_import_sample_content'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/import_html/help'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/import_html/static'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/import_html/tests'" logoutput="true" passthru="true"/>
    <exec command="sed -i ':tests/import:d' '${project.basedir}/webapp/profiles/apigee/modules/contrib/import_html/import_html.info'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/lingotek/lib/oauth-php/example'" logoutput="true" passthru="true"/>
    <exec command="rm -f '${project.basedir}/webapp/profiles/apigee/modules/contrib/mailsystem/README.html'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/panels/help'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/views/help'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/modules/contrib/views_accordion/help'" logoutput="true" passthru="true"/>
    <!-- finished removal of extraneous module content -->

    <!-- begin removal of extraneous theme content -->
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/themes/apigee_base/bootstrap/js/tests'" logoutput="true" passthru="true"/>
    <exec command="rm -rf '${project.basedir}/webapp/profiles/apigee/themes/apigee_base/bootstrap/less/tests'" logoutput="true" passthru="true"/>
    <!-- finished removal of extraneous theme content -->
    
    <!-- remove txt files from webroot -->
    <exec command="rm -f '${project.basedir}/webapp/*.txt'" logoutput="true" passthru="true"/>

    <!-- finish up -->
    <phingcall target="build-info-file"/>
    <exec command="touch '${project.basedir}/webapp/sites/default/settings.php'"/>
    <exec command="git add * --all" dir="${project.basedir}/webapp" logoutput="true"/>
    <exec command="git commit -m 'UPDATE: Developer Services 14.08.27.${env.BUILD_NUMBER}'" dir="${project.basedir}/webapp" logoutput="true"/>
    <exec command="git push origin ${push-branch}" dir="${project.basedir}/webapp"/>
  </target>
  <!-- 
    
    
    -->
  <target name="build-info-file">
    <tstamp/>
    <echo file="${project.basedir}/webapp/buildInfo" append="false" level="verbose">Version: Developer Services 14.08.27.${env.BUILD_NUMBER}
Build Timestamp: ${DSTAMP}.${TSTAMP}
SCM Revision: ${env.GIT_COMMIT}
    </echo>
  </target>
  <target name="display-step">
    <echo>-------------------------------------------------</echo>
    <echo>=&gt; ${message}</echo>
    <echo>-------------------------------------------------</echo>
  </target>
</project>
